{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/root.component.html","webpack:///./src/app/components/root.component.ts","webpack:///./src/app/directives/line-chart.directive.ts","webpack:///./src/app/scenes/tenders/tenders.component.html","webpack:///./src/app/scenes/tenders/tenders.component.ts","webpack:///./src/app/services/contract.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TendersComponent } from './scenes/tenders/tenders.component';\n\nconst routes: Routes = [\n  {\n    path: 'tenders',\n    component: TendersComponent\n  },\n\n  { path: '**', redirectTo: 'tenders' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { HttpClientModule } from '@angular/common/http';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@datagazer/layout';\nimport { StructureModule } from '@datagazer/structure';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeaderComponent } from './components/header/header.component';\nimport { RootComponent } from './components/root.component';\nimport { LineChartDirective } from './directives/line-chart.directive';\nimport { TendersComponent } from './scenes/tenders/tenders.component';\nimport { ContractService } from './services/contract.service';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatProgressBarModule,\n    MatTableModule,\n    LayoutModule,\n    StructureModule,\n    AppRoutingModule\n  ],\n\n  declarations: [\n    RootComponent,\n    HeaderComponent,\n    LineChartDirective,\n    TendersComponent\n  ],\n\n  providers: [\n    ContractService,\n\n    { provide: LOCALE_ID, useValue: 'uk' }\n  ],\n\n  bootstrap: [RootComponent]\n})\nexport class AppModule {}\n","<dg-row container>\n  <dg-heading level=\"headline\">Контроль ремонту доріг</dg-heading>\n</dg-row>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {}\n","<app-header></app-header>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss']\n})\nexport class RootComponent {}\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { chart } from 'highcharts';\n\n@Directive({\n  selector: 'app-line-chart'\n})\nexport class LineChartDirective implements AfterViewInit {\n  @Input()\n  public readonly data: any[];\n\n  constructor(\n    private readonly $elementRef: ElementRef\n  ) {}\n\n  public ngAfterViewInit(): void {\n    chart(this.$elementRef.nativeElement, {\n      chart: {\n        type: 'line'\n      },\n\n      xAxis: {\n        type: 'datetime'\n      },\n\n      yAxis: {\n        type: 'linear',\n        title: null\n      },\n\n      series: [\n        { data: this.data }\n      ],\n\n      title: null,\n\n      legend: {\n        enabled: false\n      },\n\n      credits: {\n        enabled: false\n      }\n    });\n  }\n}\n","<mat-card>\n  <dg-heading level=\"headline\">СЛУЖБА АВТОМОБІЛЬНИХ ДОРІГ У ЧЕРНІГІВСЬКІЙ ОБЛАСТІ</dg-heading>\n</mat-card>\n\n<mat-card>\n  Всього виконано робіт: {{ calcTotalProgress(contracts$ | async) | percent }}\n  <mat-progress-bar color=\"primary\" value=\"{{ calcTotalProgress(contracts$ | async) * 100 }}\"></mat-progress-bar>\n</mat-card>\n\n<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let contract of contracts$ | async\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>Документ №{{ contract.documentNumber }} від {{ contract.fromDate | date : 'shortDate' : 'UTC' }}</mat-panel-title>\n\n      <mat-panel-description>\n        <mat-progress-bar color=\"primary\" value=\"{{ calcPaidAmount(contract) / contract.amount * 100 }}\"></mat-progress-bar>\n        <span class=\"progress-percentage\">{{ calcPaidAmount(contract) / contract.amount | percent }}</span>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <dg-grid class=\"mat-small\">\n      <dg-grid-cell column-span=\"3\">Предмет договору</dg-grid-cell>\n      <dg-grid-cell column-span=\"9\">{{ contract.subject }}</dg-grid-cell>\n\n      <dg-grid-cell column-span=\"3\">Строк дії договору</dg-grid-cell>\n      <dg-grid-cell column-span=\"9\">{{ contract.fromDate | date : 'shortDate' : 'UTC' }} - {{ contract.toDate | date : 'shortDate' : 'UTC' }}</dg-grid-cell>\n\n      <dg-grid-cell column-span=\"3\">Вартість договору</dg-grid-cell>\n      <dg-grid-cell column-span=\"9\">{{ contract.amount | currency : contract.currency }}</dg-grid-cell>\n\n      <dg-grid-cell column-span=\"3\">Актів на суму</dg-grid-cell>\n      <dg-grid-cell column-span=\"9\">{{ calcPaidAmount(contract) | currency : contract.currency }}</dg-grid-cell>\n\n      <dg-grid-cell column-span=\"12\">\n        <dg-column>\n          <dg-heading level=\"title\">Графік виконання</dg-heading>\n          <app-line-chart [data]=\"calcProgress(contract)\"></app-line-chart>\n        </dg-column>\n      </dg-grid-cell>\n\n      <dg-grid-cell column-span=\"12\">\n        <dg-column>\n          <dg-heading level=\"title\">\n            Акти <span class=\"mat-small\">(всього актів: {{ contract.acts.length }})</span>\n          </dg-heading>\n\n          <table mat-table [dataSource]=\"contract.acts\">\n            <ng-container matColumnDef=\"number\">\n              <th mat-header-cell *matHeaderCellDef>Номер</th>\n              <td mat-cell *matCellDef=\"let act\">{{ act.documentNumber }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"date\">\n              <th mat-header-cell *matHeaderCellDef>Від</th>\n              <td mat-cell *matCellDef=\"let act\">{{ act.documentDate | date : 'shortDate' : 'UTC' }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"amount\">\n              <th mat-header-cell *matHeaderCellDef>Вартість за актом</th>\n              <td mat-cell *matCellDef=\"let act\">{{ act.amount | currency : contract.currency }}</td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"['number', 'date', 'amount']\"></tr>\n            <tr mat-row *matRowDef=\"let act; columns: ['number', 'date', 'amount']\"></tr>\n          </table>\n        </dg-column>\n      </dg-grid-cell>\n\n      <dg-grid-cell column-span=\"12\">\n        <dg-column>\n          <dg-heading level=\"title\">Контрагенти</dg-heading>\n\n          <table mat-table [dataSource]=\"contract.contractors\">\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef>Назва</th>\n              <td mat-cell *matCellDef=\"let contractor\">{{ contractor.name }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"address\">\n              <th mat-header-cell *matHeaderCellDef>Адреса</th>\n              <td mat-cell *matCellDef=\"let contractor\">{{ contractor.address.city }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"ceo\">\n              <th mat-header-cell *matHeaderCellDef>Керівник</th>\n              <td mat-cell *matCellDef=\"let contractor\">{{ contractor.lastName }} {{ contractor.firstName }} {{ contractor.middleName }}</td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"['name', 'address', 'ceo']\"></tr>\n            <tr mat-row *matRowDef=\"let contractor; columns: ['name', 'address', 'ceo']\"></tr>\n          </table>\n        </dg-column>\n      </dg-grid-cell>\n    </dg-grid>\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { publish, refCount } from 'rxjs/operators';\nimport { ContractService } from '../../services/contract.service';\n\n@Component({\n  selector: 'app-tenders',\n  templateUrl: './tenders.component.html',\n  styleUrls: ['./tenders.component.scss']\n})\nexport class TendersComponent {\n  public contracts$: Observable<any[]> = this.$contract.getContracts().pipe(\n    publish(),\n    refCount()\n  );\n\n  constructor(\n    private readonly $contract: ContractService\n  ) {}\n\n  public calcPaidAmount(contract: any): number {\n    return contract.acts.reduce((accumulator, { amount }) => accumulator + amount, 0);\n  }\n\n  public calcProgress(contract: any): any[] {\n    return contract.acts.sort((a, b) => {\n      if (a.documentDate < b.documentDate) {\n        return -1;\n      }\n\n      if (a.documentDate > b.documentDate) {\n        return 1;\n      }\n\n      return 0;\n    }).reduce((accumulator, { documentDate, amount }) => {\n      const previousAmount = accumulator.length > 0 ? accumulator[accumulator.length - 1][1] : 0;\n\n      return [\n        ...accumulator,\n        [new Date(documentDate).getTime(), previousAmount + amount]\n      ];\n    }, []);\n  }\n\n  public calcTotalProgress(contracts: any[]): number {\n    if (!contracts) {\n      return;\n    }\n\n    return contracts\n      .map((contract) => this.calcPaidAmount(contract))\n      .reduce((accumulator, amount) => accumulator + amount, 0) / contracts.reduce((accumulator, { amount }) => accumulator + amount, 0);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { concatMap, map, take, toArray } from 'rxjs/operators';\n\n@Injectable()\nexport class ContractService {\n  constructor(\n    private readonly $httpClient: HttpClient\n  ) {}\n\n  public getContracts(): Observable<any[]> {\n    return this.$httpClient.get<any>('https://cors-proxy.htmldriven.com/?url=http://api.spending.gov.ua/api/v2/disposers/contracts?disposerId=25901106&contractorId=30731879').pipe(\n      map(({ body }) => JSON.parse(body)),\n      concatMap(({ documents }) => of(...documents).pipe(take(10))),\n      concatMap(({ id }) => this.$httpClient.get<any>(`https://cors-proxy.htmldriven.com/?url=http://api.spending.gov.ua/api/v2/disposers/contracts/${id}`)),\n      map(({ body }) => JSON.parse(body)),\n      toArray()\n    );\n  }\n}\n","export const environment: Environment = {\n  production: true\n};\n","import { registerLocaleData } from '@angular/common';\nimport localeUk from '@angular/common/locales/uk';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// Environment\nimport { environment } from './environments/environment';\n\n// App Module\nimport { AppModule } from './app/app.module';\n\n{\n  registerLocaleData(localeUk, 'uk');\n\n  if (environment.production) {\n    enableProdMode();\n  }\n\n  platformBrowserDynamic().bootstrapModule(AppModule);\n}\n"],"sourceRoot":""}